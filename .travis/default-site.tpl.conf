fastcgi_cache_path /tmp/cache levels=1:2 keys_zone=TYPO3:10m inactive=24h;

perl_modules {ROOT}/Resources/Private/nginx_purge;

perl_require purge.pm;

server {
    listen 127.0.0.1:8088 default_server;
    listen [::1]:8088 default_server ipv6only=on;
    server_name localhost;

    root {ROOT}/.build/public;
    index index.php;

    access_log /tmp/access.log;
    error_log /tmp/error.log;

    error_page 405 = @purge;
    if ($request_method = PURGE) {
        return 405;
    }

    location ~* "\.php(/|$)" {
        include fastcgi.conf;
        fastcgi_pass php;

        fastcgi_cache TYPO3;
        # Use the current request url as cache key
        fastcgi_cache_key $scheme://$host:$server_port$request_uri;
        # Only cache GET/HEAD requests (not POST or PUT)
        fastcgi_cache_methods GET HEAD;
        # Do not deliver cached content for logged in be users, or requests with a query string
        fastcgi_cache_bypass $cookie_be_typo_user $args;
        # Consider every request non-cacheable â€“ cachability is explicitly defined through TYPO3
        # (using X-Accel-Expires header)
        fastcgi_cache_valid 0;
        # Ignore all cache headers, besides X-Accel-Expires
        #fastcgi_ignore_headers "Expires" "Cache-Control" "Vary";
        # "Vary" is not supported on nginx 1.1.19 (only available as of 1.7.7)
        fastcgi_ignore_headers "Expires" "Cache-Control";

        # For debugging only
        add_header X-Cache  $upstream_cache_status;
    }

    location @purge {
        allow 127.0.0.1;
        allow ::1;
        deny all;

        set $purge_path "/tmp/cache";
        set $purge_levels "1:2";
        set $purge_cache_key "$scheme://$host:$server_port$request_uri";
        set $purge_all 0;
        if ($request_uri = /*) {
            set $purge_all 1;
        }

        perl NginxCache::Purge::handler;
    }

    location / {
        # First attempt to serve request as file, then as directory, then fall back to index.html.
        try_files $uri $uri/ /index.php$is_args$args;
    }
}
